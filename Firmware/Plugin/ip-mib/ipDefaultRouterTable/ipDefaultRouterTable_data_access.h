/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 14170 $ of $
 *
 * $Id:$
 */
#ifndef IPDEFAULTROUTERTABLE_DATA_ACCESS_H
#define IPDEFAULTROUTERTABLE_DATA_ACCESS_H

#include "Container.h"
#include "CacheHandler.h"
#include "ipDefaultRouterTable.h"

    /*
     *********************************************************************
     * function declarations
     */

    /*
     *********************************************************************
     * Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table ipDefaultRouterTable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * IP-MIB::ipDefaultRouterTable is subid 37 of ip.
     * Its status is Current.
     * OID: .1.3.6.1.2.1.4.37, length: 8
     */


    int            
        ipDefaultRouterTable_init_data(ipDefaultRouterTable_registration *
                                       ipDefaultRouterTable_reg);


    /*
     * TODO:180:o: Review ipDefaultRouterTable cache timeout.
     * The number of seconds before the cache times out
     */
#define IPDEFAULTROUTERTABLE_CACHE_TIMEOUT   60

    void            ipDefaultRouterTable_container_init(Container_Container
                                                        **
                                                        container_ptr_ptr,
                                                        Cache *
                                                        cache);
    void           
        ipDefaultRouterTable_container_shutdown(Container_Container *
                                                container_ptr);

    int             ipDefaultRouterTable_container_load(Container_Container *
                                                        container);
    void            ipDefaultRouterTable_container_free(Container_Container *
                                                        container);

    int             ipDefaultRouterTable_cache_load(Container_Container *
                                                    container);
    void            ipDefaultRouterTable_cache_free(Container_Container *
                                                    container);
    int            
        ipDefaultRouterTable_row_prep(ipDefaultRouterTable_rowreq_ctx *
                                      rowreq_ctx);


#endif                          /* IPDEFAULTROUTERTABLE_DATA_ACCESS_H */
